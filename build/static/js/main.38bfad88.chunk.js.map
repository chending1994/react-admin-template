{"version":3,"sources":["api/ajax.js","api/index.js","utils/memoryUtils.js","utils/storageUtils.js","assets/images/logo.png","pages/Login/index.jsx","config/menuConfig.js","components/LeftNav/index.jsx","utils/dateUtils.js","components/LinkButton/index.jsx","components/Header/index.jsx","pages/Home/line.jsx","pages/Home/bar.jsx","pages/Home/index.jsx","pages/Category/AddForm.jsx","pages/Category/UpdateForm.jsx","pages/Category/index.jsx","utils/constants.js","pages/Product/detail.jsx","pages/Product/PicturesWall.jsx","pages/Product/RichTextEditor.jsx","pages/Product/addOrUpdate.jsx","pages/Product/list.jsx","pages/Product/index.jsx","pages/Role/AddForm.jsx","pages/Role/AuthForm.jsx","pages/Role/index.jsx","pages/User/UserForm.jsx","pages/User/index.jsx","pages/Charts/bar.jsx","pages/Charts/line.jsx","pages/Charts/pie.jsx","pages/NotFound/index.jsx","pages/Order/index.jsx","pages/Admin/index.jsx","App.js","index.js"],"names":["ajax","url","data","type","Promise","resolve","reject","axios","get","params","post","then","response","catch","error","message","BASE","reqLogin","username","password","reqCategorys","parentId","reqCategory","categoryId","reqAddCategory","categoryName","reqUpdateCategory","reqProducts","pageNum","pageSize","reqSearchProducts","searchName","searchType","reqUpdateStatus","productId","status","reqDeleteImg","name","reqAddOrUpdateProduct","product","_id","reqAddRole","roleName","reqUpdateRole","role","reqUsers","reqDeleteUser","userId","reqAddOrUpdateUser","user","reqWeather","city","jsonp","err","console","log","results","weather_data","dayPictureUrl","weather","USER_KEY","store","set","remove","Login","onFinish","values","a","success","memoryUtils","storageUtils","props","history","push","msg","onFinishFailed","errorInfo","validatePwd","rule","value","callback","length","test","className","src","logo","alt","this","autoComplete","Item","rules","required","min","max","pattern","prefix","UserOutlined","style","color","placeholder","validator","Password","LockOutlined","htmlType","Component","menuList","title","key","icon","HomeOutlined","isPublic","AppstoreOutlined","children","BarsOutlined","ToolOutlined","SafetyOutlined","AreaChartOutlined","BarChartOutlined","LineChartOutlined","PieChartOutlined","SubMenu","LeftNav","hasAuth","item","menus","indexOf","find","child","getMenuNodes","path","location","pathname","reduce","pre","cItem","openKey","to","menuNodes","selectedKeys","defaultOpenKeys","mode","theme","withRouter","formateDate","time","date","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","LinkButton","Header","state","getTime","intervalId","setInterval","currentTime","now","setState","getTitle","forEach","getWeather","logout","confirm","content","onOk","replace","clearInterval","onClick","HomeLine","float","width","height","scale","temperature","formatter","v","London","Tokyo","padding","autoFit","month","interactions","position","shape","label","shared","showCrosshairs","background","fill","stroke","React","Bar","year","sales","dateFormat","RangePicker","Home","isVisited","handleChange","extra","QuestionCircleOutlined","headStyle","suffix","fontWeight","valueStyle","fontSize","ArrowDownOutlined","marginLeft","ArrowUpOutlined","defaultValue","moment","format","bodyStyle","ReloadOutlined","Option","AddForm","formRef","createRef","setForm","categorys","ref","initialValues","map","c","index","addFormRef","current","setFieldsValue","Category","loading","subCategorys","parentName","showStatus","showAdd","showUpdate","category","showSubCategorys","getCategorys","showCategorys","handleCancel","form","resetFields","initColumns","columns","dataIndex","render","addCategory","validateFields","updateCategory","RightOutlined","marginRight","PlusOutlined","bordered","rowKey","dataSource","pagination","defaultPageSize","showQuickJumper","visible","onCancel","BASE_IMG_URL","ProductDetail","cName1","cName2","pCategoryId","result","all","desc","price","detail","imgs","ArrowLeftOutlined","goBack","img","dangerouslySetInnerHTML","__html","PicturesWall","previewVisible","previewImage","fileList","getImgs","file","handlePreview","thumbUrl","uid","uploadButton","action","accept","listType","onPreview","onChange","footer","RichTextEditor","editorState","EditorState","createEmpty","onEditorStateChange","getDetail","draftToHtml","convertToRaw","getCurrentContent","uploadImageCallBack","xhr","XMLHttpRequest","open","FormData","append","send","addEventListener","JSON","parse","responseText","link","html","contentBlock","htmlToDraft","contentState","ContentState","createFromBlockArray","contentBlocks","createWithContent","editorStyle","border","minHeight","paddingLeft","toolbar","image","uploadCallback","present","mandatory","TextArea","addOrUpdate","options","initOptions","isLeaf","isUpdate","childOptions","option","loadData","selectedOptions","targetOption","submit","categoryIds","pw","editor","validatePrice","labelCol","span","wrapperCol","autosize","minRows","maxRows","addonAfter","initialValue","PureComponent","ProductHome","total","products","newStatus","updateStatus","getProducts","list","margin","event","target","Product","exact","component","List","AddOrUpdate","Detail","addForm","menuListData","TreeNode","AuthForm","getMenus","checkedKeys","getTreeNodes","getTreeData","onCheck","treeData","nextProps","disabled","checkable","defaultExpandAll","Role","roles","isShowAdd","isShowAuth","initColumn","create_time","getRoles","onRow","addRole","updateRole","auth","auth_time","auth_name","role_id","rowSelection","selectedRowKeys","onSelect","UserForm","User","users","isShow","roleNames","deleteUser","initRoleNames","getUsers","addOrUpdateUser","getFieldsValue","stores","update","sale","getOption","text","tooltip","legend","xAxis","yAxis","series","Line","Pie","subtext","x","trigger","orient","left","radius","center","itemStyle","emphasis","shadowBlur","shadowOffsetX","shadowColor","getOption2","backgroundColor","top","textStyle","visualMap","show","inRange","colorLightness","sort","b","roseType","normal","labelLine","lineStyle","smooth","length2","animationType","animationEasing","animationDelay","idx","Math","random","NotFound","Order","Footer","Sider","Content","Admin","from","textAlign","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.38bfad88.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { message } from \"antd\";\r\n\r\nexport default function ajax(url, data = {}, type = \"GET\") {\r\n  return new Promise((resolve, reject) => {\r\n    let promise;\r\n    // 1. 执行异步ajax请求\r\n    if (type === \"GET\") {\r\n      // 发GET请求\r\n      promise = axios.get(url, {\r\n        // 配置对象\r\n        params: data, // 指定请求参数\r\n      });\r\n    } else {\r\n      // 发POST请求\r\n      promise = axios.post(url, data);\r\n    }\r\n    // 2. 如果成功了, 调用resolve(value)\r\n    promise\r\n      .then((response) => {\r\n        resolve(response.data);\r\n        // 3. 如果失败了, 不调用reject(reason), 而是提示异常信息\r\n      })\r\n      .catch((error) => {\r\n        // reject(error)\r\n        message.error(\"请求出错了: \" + error.message);\r\n      });\r\n  });\r\n}\r\n","import jsonp from \"jsonp\";\r\nimport { message } from \"antd\";\r\nimport ajax from \"./ajax\";\r\n\r\nconst BASE = \"http://localhost:5000\";\r\n\r\n// 登录\r\nexport function reqLogin(username, password) {\r\n  return ajax(BASE + \"/login\", { username, password }, \"POST\");\r\n}\r\n\r\n// 获取分类\r\nexport function reqCategorys(parentId) {\r\n  return ajax(BASE + \"/manage/category/list\", { parentId });\r\n}\r\n\r\n// 获取一个分类\r\nexport function reqCategory(categoryId){\r\n  return ajax(BASE + '/manage/category/info', {categoryId})\r\n}\r\n\r\nexport function reqAddCategory(categoryName, parentId) {\r\n  return ajax(\r\n    BASE + \"/manage/category/add\",\r\n    { categoryName, parentId },\r\n    \"POST\"\r\n  );\r\n}\r\n\r\nexport function reqUpdateCategory({ categoryId, categoryName }) {\r\n  return ajax(\r\n    BASE + \"/manage/category/update\",\r\n    { categoryId, categoryName },\r\n    \"POST\"\r\n  );\r\n}\r\n\r\nexport function reqProducts(pageNum, pageSize) {\r\n  return ajax(BASE + \"/manage/product/list\", { pageNum, pageSize });\r\n}\r\n\r\nexport function reqSearchProducts({\r\n  pageNum,\r\n  pageSize,\r\n  searchName,\r\n  searchType,\r\n}) {\r\n  return ajax(BASE + \"/manage/product/search\", {\r\n    pageNum,\r\n    pageSize,\r\n    [searchType]: searchName,\r\n  });\r\n}\r\n\r\nexport function reqUpdateStatus(productId, status) {\r\n  return ajax(\r\n    BASE + \"/manage/product/updateStatus\",\r\n    { productId, status },\r\n    \"POST\"\r\n  );\r\n}\r\n\r\nexport function reqDeleteImg(name){\r\n  return ajax(BASE + '/manage/img/delete', {name}, 'POST')\r\n}\r\n\r\nexport function reqAddOrUpdateProduct(product){\r\n  return ajax(BASE + '/manage/product/' + ( product._id?'update':'add'), product, 'POST')\r\n}\r\n\r\n// 权限列表\r\nexport function reqRoles() {\r\n  return ajax(BASE + '/manage/role/list')\r\n}\r\n\r\n// 添加角色\r\nexport function reqAddRole(roleName){\r\n  return ajax(BASE + '/manage/role/add', {roleName}, 'POST')\r\n}\r\n\r\n// 添加角色\r\nexport function reqUpdateRole (role) {\r\n  return ajax(BASE + '/manage/role/update', role, 'POST')\r\n}\r\n\r\nexport function reqUsers(){\r\n  return ajax(BASE + '/manage/user/list')\r\n}\r\n\r\n// 删除指定用户\r\nexport function reqDeleteUser(userId){\r\n  return ajax(BASE + '/manage/user/delete', {userId}, 'POST')\r\n}\r\n\r\n// 添加/更新用户\r\nexport function reqAddOrUpdateUser(user) {\r\n  return ajax(BASE + '/manage/user/'+(user._id ? 'update' : 'add'), user, 'POST')\r\n}\r\n\r\n/*\r\njson请求的接口请求函数\r\n */\r\nexport function reqWeather(city) {\r\n  return new Promise((resolve, reject) => {\r\n    const url = `http://api.map.baidu.com/telematics/v3/weather?location=${city}&output=json&ak=3p49MVra6urFRGOT9s8UBWr2`;\r\n    // 发送jsonp请求\r\n    jsonp(url, {}, (err, data) => {\r\n      console.log(\"jsonp()\", err, data);\r\n      // 如果成功了\r\n      if (!err && data.status === \"success\") {\r\n        // 取出需要的数据\r\n        const { dayPictureUrl, weather } = data.results[0].weather_data[0];\r\n        resolve({ dayPictureUrl, weather });\r\n      } else {\r\n        // 如果失败了\r\n        message.error(\"获取天气信息失败!\");\r\n      }\r\n    });\r\n  });\r\n}\r\n// reqWeather('北京')\r\n/*\r\njsonp解决ajax跨域的原理\r\n  1). jsonp只能解决GET类型的ajax请求跨域问题\r\n  2). jsonp请求不是ajax请求, 而是一般的get请求\r\n  3). 基本原理\r\n   浏览器端:\r\n      动态生成<script>来请求后台接口(src就是接口的url)\r\n      定义好用于接收响应数据的函数(fn), 并将函数名通过请求参数提交给后台(如: callback=fn)\r\n   服务器端:\r\n      接收到请求处理产生结果数据后, 返回一个函数调用的js代码, 并将结果数据作为实参传入函数调用\r\n   浏览器端:\r\n      收到响应自动执行函数调用的js代码, 也就执行了提前定义好的回调函数, 并得到了需要的结果数据\r\n */\r\n","/*\r\n用来在内存保存一些数据的工具模块\r\n */\r\nexport default {\r\n  user: {}, // 保存当前登陆的user\r\n};\r\n","/*\r\n进行local数据存储管理的工具模块\r\n */\r\nimport store from \"store\";\r\nconst USER_KEY = \"user_key\";\r\nexport default {\r\n  /*\r\n  保存user\r\n   */\r\n  saveUser(user) {\r\n    // localStorage.setItem(USER_KEY, JSON.stringify(user))\r\n    store.set(USER_KEY, user);\r\n  },\r\n\r\n  /*\r\n  读取user\r\n   */\r\n  getUser() {\r\n    // return JSON.parse(localStorage.getItem(USER_KEY) || '{}')\r\n    return store.get(USER_KEY) || {};\r\n  },\r\n\r\n  /*\r\n  删除user\r\n   */\r\n  removeUser() {\r\n    // localStorage.removeItem(USER_KEY)\r\n    store.remove(USER_KEY);\r\n  },\r\n};\r\n","export default __webpack_public_path__ + \"static/media/logo.f6487143.png\";","import React, { Component } from \"react\";\r\nimport { Form, Input, Button, message } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport { reqLogin } from \"../../api/index\";\r\nimport memoryUtils from '../../utils/memoryUtils'\r\nimport storageUtils from '../../utils/storageUtils'\r\nimport logo from \"../../assets/images/logo.png\";\r\nimport \"./login.less\";\r\n\r\nexport default class Login extends Component {\r\n  onFinish = async (values) => {\r\n    const { username, password } = values;\r\n    const data = await reqLogin(username, password);\r\n    if (data.status === 0) {\r\n      message.success('登陆成功')\r\n      \r\n      // 保存user\r\n      const user = data.data;\r\n      memoryUtils.user = user; // 保存在内存中\r\n      storageUtils.saveUser(user); // 保存到local中\r\n\r\n      this.props.history.push(\"/\");\r\n    } else {\r\n      message.error(data.msg);\r\n    }\r\n    console.log(\"data\", data);\r\n  };\r\n\r\n  onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  validatePwd = (rule, value, callback) => {\r\n    if (!value) {\r\n      callback(\"密码必须输入\");\r\n    } else if (value.length < 4) {\r\n      callback(\"密码长度不能小于4位\");\r\n    } else if (value.length > 12) {\r\n      callback(\"密码长度不能大于12位\");\r\n    } else if (!/^[a-zA-Z0-9_]+$/.test(value)) {\r\n      callback(\"密码必须是英文、数字或下划线组成\");\r\n    } else {\r\n      callback(); // 验证通过\r\n    }\r\n    // callback('xxxx') // 验证失败, 并指定提示的文本\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"login\">\r\n        <header className=\"login-header\">\r\n          <img src={logo} alt=\"logo\" />\r\n          <h1>React项目: 后台管理系统</h1>\r\n        </header>\r\n        <section className=\"login-content\">\r\n          <h2>用户登陆</h2>\r\n          <Form\r\n            name=\"basic\"\r\n            onFinish={this.onFinish}\r\n            onFinishFailed={this.onFinishFailed}\r\n            autoComplete=\"off\"\r\n            className=\"login-form\"\r\n          >\r\n            <Form.Item\r\n              name=\"username\"\r\n              rules={[\r\n                { required: true, message: \"用户名必须输入\" },\r\n                { min: 4, message: \"用户名至少4位\" },\r\n                { max: 12, message: \"用户名最多12位\" },\r\n                {\r\n                  pattern: /^[a-zA-Z0-9_]+$/,\r\n                  message: \"用户名必须是英文、数字或下划线组成\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input\r\n                prefix={<UserOutlined style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n                placeholder=\"用户名\"\r\n              />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              name=\"password\"\r\n              rules={[\r\n                {\r\n                  validator: this.validatePwd,\r\n                },\r\n              ]}\r\n            >\r\n              <Input.Password\r\n                prefix={<LockOutlined style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n                placeholder=\"密码\"\r\n              />\r\n            </Form.Item>\r\n\r\n            <Form.Item>\r\n              <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                className=\"login-form-button\"\r\n              >\r\n                登陆\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import {\r\n  HomeOutlined,\r\n  AppstoreOutlined,\r\n  BarsOutlined,\r\n  ToolOutlined,\r\n  UserOutlined,\r\n  SafetyOutlined,\r\n  AreaChartOutlined,\r\n  BarChartOutlined,\r\n  LineChartOutlined,\r\n  PieChartOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nconst menuList = [\r\n  {\r\n    title: '首页', // 菜单标题名称\r\n    key: '/home', // 对应的path\r\n    icon: HomeOutlined, // 图标名称\r\n    isPublic: true, // 公开的\r\n  },\r\n  {\r\n    title: '商品',\r\n    key: '/products',\r\n    icon: AppstoreOutlined,\r\n    children: [ // 子菜单列表\r\n      {\r\n        title: '品类管理',\r\n        key: '/category',\r\n        icon: BarsOutlined\r\n      },\r\n      {\r\n        title: '商品管理',\r\n        key: '/product',\r\n        icon: ToolOutlined\r\n      },\r\n    ]\r\n  },\r\n\r\n  {\r\n    title: '用户管理',\r\n    key: '/user',\r\n    icon: UserOutlined\r\n  },\r\n  {\r\n    title: '角色管理',\r\n    key: '/role',\r\n    icon: SafetyOutlined,\r\n  },\r\n\r\n  {\r\n    title: '图形图表',\r\n    key: '/charts',\r\n    icon: AreaChartOutlined,\r\n    children: [\r\n      {\r\n        title: '柱形图',\r\n        key: '/charts/bar',\r\n        icon: BarChartOutlined\r\n      },\r\n      {\r\n        title: '折线图',\r\n        key: '/charts/line',\r\n        icon: LineChartOutlined\r\n      },\r\n      {\r\n        title: '饼图',\r\n        key: '/charts/pie',\r\n        icon: PieChartOutlined\r\n      },\r\n    ]\r\n  },\r\n]\r\n\r\nexport default menuList","import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { Menu } from \"antd\";\r\nimport menuList from '../../config/menuConfig'\r\nimport memoryUtils from \"../../utils/memoryUtils\";\r\nimport logo from \"../../assets/images/logo.png\";\r\nimport \"./index.less\";\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nclass LeftNav extends Component {\r\n\r\n  hasAuth = (item) => {\r\n    const { key, isPublic } = item\r\n    const menus = memoryUtils.user.role.menus\r\n    const username = memoryUtils.user.username\r\n    /*\r\n    1. 如果当前用户是admin\r\n    2. 如果当前item是公开的\r\n    3. 当前用户有此item的权限: key有没有menus中\r\n     */\r\n    if(username==='admin' || isPublic || menus.indexOf(key)!==-1) {\r\n      return true\r\n    } else if(item.children){ // 4. 如果当前用户有此item的某个子item的权限\r\n      return !!item.children.find(child =>  menus.indexOf(child.key)!==-1)\r\n    }\r\n\r\n    return false\r\n  }\r\n\r\n  getMenuNodes = (menuList) => {\r\n    const path = this.props.location.pathname;\r\n    \r\n    return menuList.reduce((pre, item)=> {\r\n      if (this.hasAuth(item)) {\r\n        if (!item.children) {\r\n          pre.push((\r\n            <Menu.Item key={item.key} icon={<item.icon />}>\r\n              <Link to={item.key}>\r\n                <span>{item.title}</span>\r\n              </Link>\r\n            </Menu.Item>\r\n          ))\r\n        } else {\r\n          // 查找一个与当前请求路径匹配的子Item\r\n          const cItem = item.children.find(cItem => path.indexOf(cItem.key)===0)\r\n          // 如果存在, 说明当前item的子列表需要打开\r\n          if (cItem) {\r\n            this.openKey = item.key\r\n          }\r\n  \r\n          // 向pre添加<SubMenu>\r\n          pre.push((\r\n            <SubMenu\r\n              icon={<item.icon />}\r\n              key={item.key}\r\n              title={\r\n                <span>\r\n              {/* <Icon type={item.icon}/> */}\r\n              <span>{item.title}</span>\r\n            </span>\r\n              }\r\n            >\r\n              {this.getMenuNodes(item.children)}\r\n            </SubMenu>\r\n          ))\r\n        }\r\n      }\r\n      return pre\r\n    },[])\r\n  }\r\n  \r\n  componentWillMount() {\r\n    this.menuNodes = this.getMenuNodes(menuList);\r\n  }\r\n  componentDidMount() {\r\n  }\r\n\r\n  render() {\r\n    let path = this.props.location.pathname;\r\n    if (path.indexOf('/product') !== -1) {\r\n      path = '/product'\r\n    }\r\n    const openKey = this.openKey\r\n    return (\r\n      <div className=\"left-nav\">\r\n        <Link to=\"/\" className=\"left-nav-header\">\r\n          <img src={logo} alt=\"logo\" />\r\n          <h1>硅谷后台</h1>\r\n        </Link>\r\n        <Menu\r\n          selectedKeys={[path]}\r\n          defaultOpenKeys={[openKey]}\r\n          mode=\"inline\"\r\n          theme=\"dark\"\r\n        >\r\n          {\r\n            this.menuNodes\r\n          }\r\n        </Menu>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(LeftNav)","/*\r\n包含n个日期时间处理的工具函数模块\r\n*/\r\n\r\n/*\r\n  格式化日期\r\n*/\r\nexport function formateDate(time) {\r\n  if (!time) return ''\r\n  let date = new Date(time)\r\n  return date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate()\r\n    + ' ' + date.getHours() + ':' + date.getMinutes() + ':' + date.getSeconds()\r\n}","import React, { Component } from 'react'\r\nimport './index.less';\r\n\r\nexport default class LinkButton extends Component {\r\n  render() {\r\n    return (\r\n      <button { ...this.props } className=\"link-button\"></button>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport { Modal} from 'antd'\r\nimport memoryUtils from \"../../utils/memoryUtils\";\r\nimport storageUtils from '../../utils/storageUtils'\r\nimport { formateDate } from \"../../utils/dateUtils\";\r\nimport { reqWeather } from \"../../api\";\r\nimport menuList from \"../../config/menuConfig\";\r\nimport LinkButton from \"../LinkButton\";\r\nimport \"./index.less\";\r\n\r\nclass Header extends Component {\r\n  state = {\r\n    // currentTime: formateDate(Date.now()), \r\n    // dayPictureUrl: \"\",\r\n    // weather: \"\",\r\n  };\r\n\r\n  getTime = () => {\r\n    // 每隔1s获取当前时间, 并更新状态数据currentTime\r\n    this.intervalId = setInterval(() => {\r\n      const currentTime = formateDate(Date.now());\r\n      this.setState({ currentTime });\r\n    }, 1000);\r\n  };\r\n\r\n  getTitle = () => {\r\n    // 得到当前请求路径\r\n    const path = this.props.location.pathname;\r\n    let title;\r\n    menuList.forEach((item) => {\r\n      if (item.key === path) {\r\n        // 如果当前item对象的key与path一样,item的title就是需要显示的title\r\n        title = item.title;\r\n      } else if (item.children) {\r\n        // 在所有子item中查找匹配的\r\n        const cItem = item.children.find(\r\n          (cItem) => path.indexOf(cItem.key) === 0\r\n        );\r\n        // 如果有值才说明有匹配的\r\n        if (cItem) {\r\n          // 取出它的title\r\n          title = cItem.title;\r\n        }\r\n      }\r\n    });\r\n    return title;\r\n  };\r\n\r\n  getWeather = async () => {\r\n    // 调用接口请求异步获取数据\r\n    const { dayPictureUrl, weather } = await reqWeather(\"北京\");\r\n    // 更新状态\r\n    this.setState({ dayPictureUrl, weather });\r\n  }\r\n\r\n  logout = () => {\r\n    // 显示确认框\r\n    Modal.confirm({\r\n      content: '确定退出吗?',\r\n      onOk: () => {\r\n        // 删除保存的user数据\r\n        storageUtils.removeUser()\r\n        memoryUtils.user = {}\r\n        // 跳转到login\r\n        this.props.history.replace('/login')\r\n      }\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    // this.getTime();\r\n    // this.getWeather();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.intervalId);\r\n  }\r\n\r\n  render() {\r\n    const username = memoryUtils.user.username;\r\n    // const { currentTime, dayPictureUrl, weather } = this.state;\r\n    const title = this.getTitle();\r\n\r\n    return (\r\n      <div className=\"header\">\r\n        <div className=\"header-top\">\r\n          <span>欢迎, {username}</span>\r\n          <LinkButton onClick={this.logout}>退出</LinkButton>\r\n        </div>\r\n        <div className=\"header-bottom\">\r\n          <div className=\"header-bottom-left\">{title}</div>\r\n          <div className=\"header-bottom-right\">\r\n            {/* <span>{currentTime}</span>\r\n            <img src={dayPictureUrl} alt=\"weather\" />\r\n            <span>{weather}</span> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Header);\r\n","import React from \"react\";\r\nimport { Chart, Line, Point, Tooltip, Legend } from \"bizcharts\";\r\n\r\nexport default class HomeLine extends React.Component {\r\n  render() {\r\n    // 数据源\r\n    const data = [\r\n      {\r\n        month: \"Jan\",\r\n        city: \"Tokyo\",\r\n        temperature: 7,\r\n      },\r\n      {\r\n        month: \"Jan\",\r\n        city: \"London\",\r\n        temperature: 3.9,\r\n      },\r\n      {\r\n        month: \"Feb\",\r\n        city: \"Tokyo\",\r\n        temperature: 6.9,\r\n      },\r\n      {\r\n        month: \"Feb\",\r\n        city: \"London\",\r\n        temperature: 4.2,\r\n      },\r\n      {\r\n        month: \"Mar\",\r\n        city: \"Tokyo\",\r\n        temperature: 9.5,\r\n      },\r\n      {\r\n        month: \"Mar\",\r\n        city: \"London\",\r\n        temperature: 5.7,\r\n      },\r\n      {\r\n        month: \"Apr\",\r\n        city: \"Tokyo\",\r\n        temperature: 14.5,\r\n      },\r\n      {\r\n        month: \"Apr\",\r\n        city: \"London\",\r\n        temperature: 8.5,\r\n      },\r\n      {\r\n        month: \"May\",\r\n        city: \"Tokyo\",\r\n        temperature: 18.4,\r\n      },\r\n      {\r\n        month: \"May\",\r\n        city: \"London\",\r\n        temperature: 11.9,\r\n      },\r\n      {\r\n        month: \"Jun\",\r\n        city: \"Tokyo\",\r\n        temperature: 21.5,\r\n      },\r\n      {\r\n        month: \"Jun\",\r\n        city: \"London\",\r\n        temperature: 15.2,\r\n      },\r\n      {\r\n        month: \"Jul\",\r\n        city: \"Tokyo\",\r\n        temperature: 25.2,\r\n      },\r\n      {\r\n        month: \"Jul\",\r\n        city: \"London\",\r\n        temperature: 17,\r\n      },\r\n      {\r\n        month: \"Aug\",\r\n        city: \"Tokyo\",\r\n        temperature: 26.5,\r\n      },\r\n      {\r\n        month: \"Aug\",\r\n        city: \"London\",\r\n        temperature: 16.6,\r\n      },\r\n      {\r\n        month: \"Sep\",\r\n        city: \"Tokyo\",\r\n        temperature: 23.3,\r\n      },\r\n      {\r\n        month: \"Sep\",\r\n        city: \"London\",\r\n        temperature: 14.2,\r\n      },\r\n      {\r\n        month: \"Oct\",\r\n        city: \"Tokyo\",\r\n        temperature: 18.3,\r\n      },\r\n      {\r\n        month: \"Oct\",\r\n        city: \"London\",\r\n        temperature: 10.3,\r\n      },\r\n      {\r\n        month: \"Nov\",\r\n        city: \"Tokyo\",\r\n        temperature: 13.9,\r\n      },\r\n      {\r\n        month: \"Nov\",\r\n        city: \"London\",\r\n        temperature: 6.6,\r\n      },\r\n      {\r\n        month: \"Dec\",\r\n        city: \"Tokyo\",\r\n        temperature: 9.6,\r\n      },\r\n      {\r\n        month: \"Dec\",\r\n        city: \"London\",\r\n        temperature: 4.8,\r\n      },\r\n    ];\r\n\r\n    const scale = {\r\n      temperature: { min: 0 },\r\n      city: {\r\n        formatter: (v) => {\r\n          return {\r\n            London: \"伦敦\",\r\n            Tokyo: \"东京\",\r\n          }[v];\r\n        },\r\n      },\r\n    };\r\n\r\n    return (\r\n      <div style={{ float: \"right\", width: 750, height: 400 }}>\r\n        <Chart\r\n          scale={scale}\r\n          padding={[30, 20, 60, 40]}\r\n          autoFit\r\n          height={300}\r\n          data={data}\r\n          interactions={[\"element-active\"]}\r\n        >\r\n          <Point position=\"month*temperature\" color=\"city\" shape=\"circle\" />\r\n          <Line\r\n            shape=\"smooth\"\r\n            position=\"month*temperature\"\r\n            color=\"city\"\r\n            label=\"temperature\"\r\n          />\r\n          <Tooltip shared showCrosshairs />\r\n          <Legend\r\n            background={{\r\n              padding: [5, 100, 5, 36],\r\n              style: {\r\n                fill: \"#eaeaea\",\r\n                stroke: \"#fff\",\r\n              },\r\n            }}\r\n          />\r\n        </Chart>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Chart, Tooltip, Interval } from \"bizcharts\";\r\n\r\nexport default class Bar extends React.Component {\r\n  render() {\r\n    const data = [\r\n      { year: \"1951 年\", sales: 38 },\r\n      { year: \"1952 年\", sales: 52 },\r\n      { year: \"1956 年\", sales: 61 },\r\n      { year: \"1957 年\", sales: 45 },\r\n      { year: \"1958 年\", sales: 48 },\r\n      { year: \"1959 年\", sales: 38 },\r\n      { year: \"1960 年\", sales: 38 },\r\n      { year: \"1962 年\", sales: 38 },\r\n    ];\r\n    return (\r\n      <div style={{ width: \"100%\" }}>\r\n        <Chart\r\n          height={400}\r\n          autoFit\r\n          data={data}\r\n          interactions={[\"active-region\"]}\r\n          padding={[30, 30, 30, 50]}\r\n        >\r\n          <Interval position=\"year*sales\" />\r\n          <Tooltip shared />\r\n        </Chart>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Card, Statistic, DatePicker, Timeline } from \"antd\";\r\nimport {\r\n  QuestionCircleOutlined,\r\n  ArrowDownOutlined,\r\n  ArrowUpOutlined,\r\n  ReloadOutlined,\r\n} from \"@ant-design/icons\";\r\nimport moment from \"moment\";\r\n\r\nimport Line from \"./line\";\r\nimport Bar from \"./bar\";\r\nimport \"./home.less\";\r\n\r\nconst dateFormat = \"YYYY/MM/DD\";\r\nconst { RangePicker } = DatePicker;\r\n\r\nexport default class Home extends Component {\r\n  state = {\r\n    isVisited: true,\r\n  };\r\n\r\n  handleChange = (isVisited) => {\r\n    return () => this.setState({ isVisited });\r\n  };\r\n\r\n  render() {\r\n    const { isVisited } = this.state;\r\n\r\n    return (\r\n      <div className=\"home\">\r\n        <Card\r\n          className=\"home-card\"\r\n          title=\"商品总量\"\r\n          extra={\r\n            <QuestionCircleOutlined style={{ color: \"rgba(0,0,0,.45)\" }} />\r\n          }\r\n          style={{ width: 250 }}\r\n          headStyle={{ color: \"rgba(0,0,0,.45)\" }}\r\n        >\r\n          <Statistic\r\n            value={1128163}\r\n            suffix=\"个\"\r\n            style={{ fontWeight: \"bolder\" }}\r\n          />\r\n          <Statistic\r\n            value={15}\r\n            valueStyle={{ fontSize: 15 }}\r\n            prefix={\"周同比\"}\r\n            suffix={\r\n              <div>\r\n                %\r\n                <ArrowDownOutlined style={{ color: \"red\", marginLeft: 10 }} />\r\n              </div>\r\n            }\r\n          />\r\n          <Statistic\r\n            value={10}\r\n            valueStyle={{ fontSize: 15 }}\r\n            prefix={\"日同比\"}\r\n            suffix={\r\n              <div>\r\n                %\r\n                <ArrowUpOutlined style={{ color: \"#3f8600\", marginLeft: 10 }} />\r\n              </div>\r\n            }\r\n          />\r\n        </Card>\r\n\r\n        <Line />\r\n\r\n        <Card\r\n          className=\"home-content\"\r\n          title={\r\n            <div className=\"home-menu\">\r\n              <span\r\n                className={\r\n                  isVisited\r\n                    ? \"home-menu-active home-menu-visited\"\r\n                    : \"home-menu-visited\"\r\n                }\r\n                onClick={this.handleChange(true)}\r\n              >\r\n                访问量\r\n              </span>\r\n              <span\r\n                className={isVisited ? \"\" : \"home-menu-active\"}\r\n                onClick={this.handleChange(false)}\r\n              >\r\n                销售量\r\n              </span>\r\n            </div>\r\n          }\r\n          extra={\r\n            <RangePicker\r\n              defaultValue={[\r\n                moment(\"2019/01/01\", dateFormat),\r\n                moment(\"2019/06/01\", dateFormat),\r\n              ]}\r\n              format={dateFormat}\r\n            />\r\n          }\r\n        >\r\n          <Card\r\n            className=\"home-table-left\"\r\n            title={isVisited ? \"访问趋势\" : \"销售趋势\"}\r\n            bodyStyle={{ padding: 0 }}\r\n            extra={<ReloadOutlined />}\r\n          >\r\n            <Bar />\r\n          </Card>\r\n\r\n          <Card\r\n            title=\"任务\"\r\n            extra={<ReloadOutlined />}\r\n            className=\"home-table-right\"\r\n          >\r\n            <Timeline>\r\n              <Timeline.Item color=\"green\">新版本迭代会</Timeline.Item>\r\n              <Timeline.Item color=\"green\">完成网站设计初版</Timeline.Item>\r\n              <Timeline.Item color=\"red\">\r\n                <p>联调接口</p>\r\n                <p>功能验收</p>\r\n              </Timeline.Item>\r\n              <Timeline.Item>\r\n                <p>登录功能设计</p>\r\n                <p>权限验证</p>\r\n                <p>页面排版</p>\r\n              </Timeline.Item>\r\n            </Timeline>\r\n          </Card>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Form, Select, Input } from \"antd\";\r\n\r\nconst Option = Select.Option;\r\n\r\n/*\r\n添加分类的form组件\r\n */\r\nexport default class AddForm extends Component {\r\n  static propTypes = {\r\n    setForm: PropTypes.func.isRequired, // 用来传递form对象的函数\r\n    categorys: PropTypes.array.isRequired, // 一级分类的数组\r\n    parentId: PropTypes.string.isRequired, // 父分类的ID\r\n  };\r\n\r\n  formRef = React.createRef();\r\n\r\n  onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  componentWillMount() {\r\n    this.props.setForm(this.formRef);\r\n  }\r\n\r\n  render() {\r\n    const { categorys, parentId } = this.props;\r\n\r\n    return (\r\n      <Form\r\n        name=\"basic\"\r\n        onFinishFailed={this.onFinishFailed}\r\n        ref={this.formRef}\r\n        initialValues={{ parentId }}\r\n      >\r\n        <Form.Item name=\"parentId\">\r\n          <Select>\r\n            <Option value=\"0\">一级分类</Option>\r\n            {categorys.map((c,index) => (\r\n              <Option key={index} value={c._id}>\r\n                {c.name}\r\n              </Option>\r\n            ))}\r\n          </Select>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"categoryName\"\r\n          rules={[{ required: true, message: \"分类名称必须输入\" }]}\r\n        >\r\n          <Input placeholder=\"请输入分类名称\" />\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Form, Input } from \"antd\";\r\n\r\n/*\r\n添加分类的form组件\r\n */\r\nexport default class AddForm extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    props.setForm(this.addFormRef);\r\n  }\r\n  state = {}\r\n\r\n  static propTypes = {\r\n    categoryName: PropTypes.string,\r\n    setForm: PropTypes.func.isRequired, // 用来传递form对象的函数\r\n  };\r\n\r\n\r\n  addFormRef = React.createRef();\r\n\r\n  onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  static getDerivedStateFromProps(props,state) {\r\n    return true\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const { categoryName } = this.props;\r\n    this.addFormRef.current.setFieldsValue({categoryName})\r\n  }\r\n\r\n  render() {\r\n    const { categoryName } = this.props;\r\n    return (\r\n      <Form\r\n        name=\"basic\"\r\n        onFinishFailed={this.onFinishFailed}\r\n        initialValues={{categoryName}}\r\n        ref={this.addFormRef}\r\n      >\r\n        <Form.Item\r\n          name=\"categoryName\"\r\n          rules={[{ required: true, message: \"分类名称必须输入\" }]}\r\n        >\r\n          <Input placeholder=\"请输入分类名称\" />\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Card, Table, Button, Modal } from \"antd\";\r\nimport { PlusOutlined, RightOutlined } from \"@ant-design/icons\";\r\nimport { reqCategorys, reqAddCategory, reqUpdateCategory } from \"../../api\";\r\nimport LinkButton from \"../../components/LinkButton\";\r\nimport AddForm from \"./AddForm\";\r\nimport UpdateForm from \"./UpdateForm\";\r\n\r\nexport default class Category extends Component {\r\n  state = {\r\n    loading: false, // 是否正在获取数据中\r\n    categorys: [], // 一级分类列表\r\n    subCategorys: [], // 二级分类列表\r\n    parentId: \"0\", // 当前需要显示的分类列表的父分类ID\r\n    parentName: \"\", // 当前需要显示的分类列表的父分类名称\r\n    showStatus: 0, // 标识添加/更新的确认框是否显示, 0: 都不显示, 1: 显示添加, 2: 显示更新\r\n  };\r\n\r\n  showAdd = () => {\r\n    this.setState({\r\n      showStatus: 1,\r\n    });\r\n  };\r\n\r\n  /*\r\n  显示修改的确认框\r\n   */\r\n  showUpdate = (category) => {\r\n    // 保存分类对象\r\n    this.category = category;\r\n    // 更新状态\r\n    this.setState({\r\n      showStatus: 2,\r\n    });\r\n  };\r\n\r\n   /*\r\n  显示指定一级分类对象的二子列表\r\n   */\r\n  showSubCategorys = (category) => {\r\n    // 更新状态\r\n    this.setState({\r\n      parentId: category._id,\r\n      parentName: category.name\r\n    }, () => { // 在状态更新且重新render()后执行\r\n      // 获取二级分类列表显示\r\n      this.getCategorys()\r\n    })\r\n\r\n    // setState()不能立即获取最新的状态: 因为setState()是异步更新状态的\r\n    // console.log('parentId', this.state.parentId) // '0'\r\n  }\r\n\r\n  /*\r\n  显示指定一级分类列表\r\n   */\r\n  showCategorys = () => {\r\n    // 更新为显示一列表的状态\r\n    this.setState({\r\n      parentId: '0',\r\n      parentName: '',\r\n      subCategorys: []\r\n    })\r\n  }\r\n\r\n  /*\r\n  响应点击取消: 隐藏确定框\r\n   */\r\n  handleCancel = () => {\r\n    // 清除输入数据\r\n    const form = this.form.current;\r\n    form.resetFields()\r\n    // 隐藏确认框\r\n    this.setState({\r\n      showStatus: 0,\r\n    });\r\n  };\r\n\r\n  getCategorys = async (parentId) => {\r\n    this.setState({ loading: true });\r\n    parentId = parentId || this.state.parentId;\r\n    const data = await reqCategorys(parentId);\r\n    this.setState({ loading: false });\r\n    if (data.status === 0) {\r\n      const categorys = data.data;\r\n      if (parentId === \"0\") {\r\n        this.setState({\r\n          categorys,\r\n        });\r\n      } else {\r\n        this.setState({\r\n          subCategorys: categorys,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  initColumns = () => {\r\n    this.columns = [\r\n      {\r\n        title: \"分类的名称\",\r\n        dataIndex: \"name\", // 显示数据对应的属性名\r\n      },\r\n      {\r\n        title: \"操作\",\r\n        width: 300,\r\n        render: (\r\n          category // 返回需要显示的界面标签\r\n        ) => (\r\n          <span>\r\n            <LinkButton onClick={() => this.showUpdate(category)}>\r\n              修改分类\r\n            </LinkButton>\r\n            {/*如何向事件回调函数传递参数: 先定义一个匿名函数, 在函数调用处理的函数并传入数据*/}\r\n            {this.state.parentId === \"0\" ? (\r\n              <LinkButton onClick={() => this.showSubCategorys(category)}>\r\n                查看子分类\r\n              </LinkButton>\r\n            ) : null}\r\n          </span>\r\n        ),\r\n      },\r\n    ];\r\n  };\r\n\r\n  /*\r\n  添加分类\r\n   */\r\n  addCategory = async () => {\r\n    const form = this.form.current;\r\n    try {\r\n      const values = await form.validateFields([\"parentId\", \"categoryName\"]);\r\n      // 隐藏确认框\r\n      this.setState({\r\n        showStatus: 0,\r\n      });\r\n\r\n      // 收集数据, 并提交添加分类的请求\r\n      const { parentId, categoryName } = values;\r\n      // 清除输入数据\r\n      form.resetFields();\r\n      const data = await reqAddCategory(categoryName, parentId);\r\n      if (data.status === 0) {\r\n        // 添加的分类就是当前分类列表下的分类\r\n        if (parentId === this.state.parentId) {\r\n          // 重新获取当前分类列表显示\r\n          this.getCategorys();\r\n        } else if (parentId === \"0\") {\r\n          // 在二级分类列表下添加一级分类, 重新获取一级分类列表, 但不需要显示一级列表\r\n          this.getCategorys(\"0\");\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n\r\n    /*\r\n  更新分类\r\n   */\r\n  updateCategory = async () => {\r\n    // 进行表单验证, 只有通过了才处理\r\n    const form = this.form.current;\r\n    try {\r\n      const values = await form.validateFields([\"categoryName\"]);\r\n      // 隐藏确认框\r\n      this.setState({\r\n        showStatus: 0,\r\n      });\r\n\r\n      // 准备数据\r\n      const categoryId = this.category._id\r\n      const { categoryName } = values\r\n\r\n      // 清除输入数据\r\n      form.resetFields();\r\n      const data = await reqUpdateCategory({categoryId, categoryName})\r\n      if (data.status===0) {\r\n        // 3. 重新显示列表\r\n        this.getCategorys()\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.initColumns();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getCategorys();\r\n  }\r\n\r\n  render() {\r\n    // 读取状态数据\r\n    const {\r\n      categorys,\r\n      subCategorys,\r\n      parentId,\r\n      parentName,\r\n      loading,\r\n      showStatus,\r\n    } = this.state;\r\n    // 读取指定的分类\r\n    const category = this.category || {}; // 如果还没有指定一个空对象\r\n    // card的左侧\r\n    const title =\r\n      parentId === \"0\" ? (\r\n        \"一级分类列表\"\r\n      ) : (\r\n        <span>\r\n          <LinkButton onClick={this.showCategorys}>一级分类列表</LinkButton>\r\n          <RightOutlined style={{ marginRight: 5 }} />\r\n          <span>{parentName}</span>\r\n        </span>\r\n      );\r\n\r\n    // Card的右侧\r\n    const extra = (\r\n      <Button type=\"primary\" onClick={this.showAdd}>\r\n        <PlusOutlined />\r\n        添加\r\n      </Button>\r\n    );\r\n\r\n    return (\r\n      <Card title={title} extra={extra}>\r\n        <Table\r\n          bordered\r\n          rowKey=\"_id\"\r\n          loading={loading}\r\n          dataSource={parentId === \"0\" ? categorys : subCategorys}\r\n          columns={this.columns}\r\n          pagination={{ defaultPageSize: 5, showQuickJumper: true }}\r\n        />\r\n\r\n        <Modal\r\n          title=\"添加分类1\"\r\n          visible={showStatus === 1}\r\n          onOk={this.addCategory}\r\n          onCancel={this.handleCancel}\r\n        >\r\n          <AddForm\r\n            categorys={ categorys }\r\n            parentId={parentId}\r\n            setForm={(form) => {\r\n              this.form = form;\r\n            }}\r\n          />\r\n        </Modal>\r\n\r\n        <Modal\r\n          title=\"更新分类\"\r\n          visible={showStatus === 2}\r\n          onOk={this.updateCategory}\r\n          onCancel={this.handleCancel}\r\n        >\r\n          <UpdateForm\r\n            categoryName={category.name}\r\n            setForm={(form) => {\r\n              this.form = form;\r\n            }}\r\n          />\r\n        </Modal>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n","/*\r\n包含一些常量值的模块\r\n */\r\nexport const PAGE_SIZE = 3 // 每页显示的记录数\r\nexport const BASE_IMG_URL = 'http://localhost:5000/upload/' // 上传图片的基础路径","import React, {Component} from 'react'\r\nimport {\r\n  Card,\r\n  List\r\n} from 'antd'\r\nimport { ArrowLeftOutlined } from '@ant-design/icons';\r\n\r\nimport LinkButton from '../../components/LinkButton'\r\nimport {BASE_IMG_URL} from '../../utils/constants'\r\nimport {reqCategory} from '../../api'\r\nimport './product.less';\r\n\r\nconst Item = List.Item\r\n\r\n\r\n/*\r\nProduct的详情子路由组件\r\n */\r\nexport default class ProductDetail extends Component {\r\n\r\n  state = {\r\n    cName1: '', // 一级分类名称\r\n    cName2: '', // 二级分类名称\r\n  }\r\n\r\n  async componentDidMount () {\r\n\r\n    // 得到当前商品的分类ID\r\n    const {pCategoryId, categoryId} = this.props.location.state.product\r\n    if(pCategoryId==='0') { // 一级分类下的商品\r\n      const result = await reqCategory(categoryId)\r\n      const cName1 = result.data.name\r\n      this.setState({cName1})\r\n    } else { // 二级分类下的商品\r\n      /*\r\n      //通过多个await方式发多个请求: 后面一个请求是在前一个请求成功返回之后才发送\r\n      const result1 = await reqCategory(pCategoryId) // 获取一级分类列表\r\n      const result2 = await reqCategory(categoryId) // 获取二级分类\r\n      const cName1 = result1.data.name\r\n      const cName2 = result2.data.name\r\n      */\r\n\r\n      // 一次性发送多个请求, 只有都成功了, 才正常处理\r\n      const results = await Promise.all([reqCategory(pCategoryId), reqCategory(categoryId)])\r\n      const cName1 = results[0].data.name\r\n      const cName2 = results[1].data.name\r\n      this.setState({\r\n        cName1,\r\n        cName2\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    // 读取携带过来的state数据\r\n    const {name, desc, price, detail, imgs} = this.props.location.state.product\r\n    const {cName1, cName2} = this.state\r\n\r\n    const title = (\r\n      <span>\r\n        <LinkButton>\r\n          <ArrowLeftOutlined style={{marginRight: 10, fontSize: 20}} onClick={() => this.props.history.goBack()}/>\r\n        </LinkButton>\r\n\r\n        <span>商品详情</span>\r\n      </span>\r\n    )\r\n    return (\r\n      <Card title={title} className='product-detail'>\r\n        <List>\r\n          <Item>\r\n            <span className=\"left\">商品名称:</span>\r\n            <span>{name}</span>\r\n          </Item>\r\n          <Item>\r\n            <span className=\"left\">商品描述:</span>\r\n            <span>{desc}</span>\r\n          </Item>\r\n          <Item>\r\n            <span className=\"left\">商品价格:</span>\r\n            <span>{price}元</span>\r\n          </Item>\r\n          <Item>\r\n            <span className=\"left\">所属分类:</span>\r\n            <span>{cName1} {cName2 ? ' --> '+cName2 : ''}</span>\r\n          </Item>\r\n          <Item>\r\n            <span className=\"left\">商品图片:</span>\r\n            <span>\r\n              {\r\n                imgs.map(img => (\r\n                  <img\r\n                    key={img}\r\n                    src={BASE_IMG_URL + img}\r\n                    className=\"product-img\"\r\n                    alt=\"img\"\r\n                  />\r\n                ))\r\n              }\r\n            </span>\r\n          </Item>\r\n          <Item>\r\n            <span className=\"left\">商品详情:</span>\r\n            <span dangerouslySetInnerHTML={{__html: detail}}>\r\n            </span>\r\n          </Item>\r\n\r\n        </List>\r\n      </Card>\r\n    )\r\n  }\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Upload, Modal, message } from 'antd'\r\nimport {reqDeleteImg} from '../../api'\r\nimport {BASE_IMG_URL} from \"../../utils/constants\";\r\nimport { PlusOutlined } from '@ant-design/icons';\r\n\r\n\r\n/*\r\n用于图片上传的组件\r\n */\r\nexport default class PicturesWall extends React.Component {\r\n\r\n  static propTypes = {\r\n    imgs: PropTypes.array\r\n  }\r\n\r\n  state = {\r\n    previewVisible: false, // 标识是否显示大图预览Modal\r\n    previewImage: '', // 大图的url\r\n    fileList: [],\r\n  }\r\n\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    let fileList = []\r\n\r\n    // 如果传入了imgs属性\r\n    const {imgs} = this.props\r\n    if (imgs && imgs.length>0) {\r\n      fileList = imgs.map((img, index) => ({\r\n        uid: -index, // 每个file都有自己唯一的id\r\n        name: img, // 图片文件名\r\n        status: 'done', // 图片状态: done-已上传, uploading: 正在上传中, removed: 已删除\r\n        url: BASE_IMG_URL + img\r\n      }))\r\n    }\r\n\r\n    // 初始化状态\r\n    this.state = {\r\n      previewVisible: false, // 标识是否显示大图预览Modal\r\n      previewImage: '', // 大图的url\r\n      fileList // 所有已上传图片的数组\r\n    }\r\n  }\r\n\r\n  /*\r\n  获取所有已上传图片文件名的数组\r\n   */\r\n  getImgs  = () => {\r\n    return this.state.fileList.map(file => file.name)\r\n  }\r\n\r\n  /*\r\n  隐藏Modal\r\n   */\r\n  handleCancel = () => this.setState({ previewVisible: false });\r\n\r\n  handlePreview = file => {\r\n    console.log('handlePreview()', file)\r\n    // 显示指定file对应的大图\r\n    this.setState({\r\n      previewImage: file.url || file.thumbUrl,\r\n      previewVisible: true,\r\n    });\r\n  };\r\n\r\n  /*\r\n  file: 当前操作的图片文件(上传/删除)\r\n  fileList: 所有已上传图片文件对象的数组\r\n   */\r\n  handleChange = async ({ file, fileList }) => {\r\n    console.log('handleChange()', file.status, fileList.length, file===fileList[fileList.length-1])\r\n\r\n    // 一旦上传成功, 将当前上传的file的信息修正(name, url)\r\n    if(file.status==='done') {\r\n      const result = file.response  // {status: 0, data: {name: 'xxx.jpg', url: '图片地址'}}\r\n      if(result.status===0) {\r\n        message.success('上传图片成功!')\r\n        const {name, url} = result.data\r\n        file = fileList[fileList.length-1]\r\n        file.name = name\r\n        file.url = url\r\n      } else {\r\n        message.error('上传图片失败')\r\n      }\r\n    } else if (file.status==='removed') { // 删除图片\r\n      const result = await reqDeleteImg(file.name)\r\n      if (result.status===0) {\r\n        message.success('删除图片成功!')\r\n      } else {\r\n        message.error('删除图片失败!')\r\n      }\r\n    }\r\n\r\n    // 在操作(上传/删除)过程中更新fileList状态\r\n    this.setState({ fileList })\r\n  };\r\n\r\n  render() {\r\n    const { previewVisible, previewImage, fileList } = this.state;\r\n    const uploadButton = (\r\n      <div>\r\n        <PlusOutlined />\r\n        <div>Upload</div>\r\n      </div>\r\n    );\r\n    return (\r\n      <div>\r\n        <Upload\r\n          action=\"/manage/img/upload\" /*上传图片的接口地址*/\r\n          accept='image/*'  /*只接收图片格式*/\r\n          name='image' /*请求参数名*/\r\n          listType=\"picture-card\"  /*卡片样式*/\r\n          fileList={fileList}  /*所有已上传图片文件对象的数组*/\r\n          onPreview={this.handlePreview}\r\n          onChange={this.handleChange}\r\n        >\r\n          {fileList.length >= 4 ? null : uploadButton}\r\n        </Upload>\r\n\r\n        <Modal visible={previewVisible} footer={null} onCancel={this.handleCancel}>\r\n          <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}","/*\r\n用来指定商品详情的富文本编辑器组件\r\n */\r\nimport React, {Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {EditorState, convertToRaw, ContentState} from 'draft-js'\r\nimport {Editor} from 'react-draft-wysiwyg'\r\nimport draftToHtml from 'draftjs-to-html'\r\nimport htmlToDraft from 'html-to-draftjs'\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css'\r\n\r\nexport default class RichTextEditor extends Component {\r\n  \r\n  static propTypes = {\r\n    detail: PropTypes.string\r\n  }\r\n  \r\n  state = {\r\n    editorState: EditorState.createEmpty(), // 创建一个没有内容的编辑对象\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    const html = this.props.detail\r\n    if (html) { // 如果有值, 根据html格式字符串创建一个对应的编辑对象\r\n      const contentBlock = htmlToDraft(html)\r\n      const contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks)\r\n      const editorState = EditorState.createWithContent(contentState)\r\n      this.state = {\r\n        editorState,\r\n      }\r\n    } else {\r\n      this.state = {\r\n        editorState: EditorState.createEmpty(), // 创建一个没有内容的编辑对象\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  /*\r\n  输入过程中实时的回调\r\n   */\r\n  onEditorStateChange = (editorState) => {\r\n    this.setState({\r\n      editorState,\r\n    })\r\n  }\r\n\r\n  getDetail = () => {\r\n    // 返回输入数据对应的html格式的文本\r\n    return draftToHtml(convertToRaw(this.state.editorState.getCurrentContent()))\r\n  }\r\n\r\n  uploadImageCallBack = (file) => {\r\n    return new Promise(\r\n      (resolve, reject) => {\r\n        const xhr = new XMLHttpRequest()\r\n        xhr.open('POST', '/manage/img/upload')\r\n        const data = new FormData()\r\n        data.append('image', file)\r\n        xhr.send(data)\r\n        xhr.addEventListener('load', () => {\r\n          const response = JSON.parse(xhr.responseText)\r\n          const url = response.data.url // 得到图片的url\r\n          resolve({data: {link: url}})\r\n        })\r\n        xhr.addEventListener('error', () => {\r\n          const error = JSON.parse(xhr.responseText)\r\n          reject(error)\r\n        })\r\n      }\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const {editorState} = this.state\r\n    return (\r\n      <Editor\r\n        editorState={editorState}\r\n        editorStyle={{border: '1px solid black', minHeight: 200, paddingLeft: 10}}\r\n        onEditorStateChange={this.onEditorStateChange}\r\n        toolbar={{\r\n          image: { uploadCallback: this.uploadImageCallBack, alt: { present: true, mandatory: true } },\r\n        }}\r\n      />\r\n    )\r\n  }\r\n}","import { Card, Form, Input, Cascader, Button, message } from \"antd\";\r\nimport { ArrowLeftOutlined } from \"@ant-design/icons\";\r\nimport React, { PureComponent } from \"react\";\r\nimport { reqCategorys, reqAddOrUpdateProduct } from \"../../api\";\r\nimport PicturesWall from \"./PicturesWall\";\r\nimport RichTextEditor from \"./RichTextEditor\";\r\nimport LinkButton from '../../components/LinkButton';\r\n\r\nconst Item = Form.Item;\r\nconst TextArea = Input.TextArea;\r\n\r\nexport default class addOrUpdate extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.pw = React.createRef();\r\n    this.editor = React.createRef();\r\n  }\r\n\r\n  state = {\r\n    options: [],\r\n  };\r\n\r\n  formRef = React.createRef();\r\n\r\n  initOptions = async (categorys) => {\r\n    // 根据categorys生成options数组\r\n    const options = categorys.map((c) => ({\r\n      value: c._id,\r\n      label: c.name,\r\n      isLeaf: false, // 不是叶子\r\n    }));\r\n\r\n    // 如果是一个二级分类商品的更新\r\n    const { isUpdate, product } = this;\r\n    const { pCategoryId } = product;\r\n    if (isUpdate && pCategoryId !== \"0\") {\r\n      // 获取对应的二级分类列表\r\n      const subCategorys = await this.getCategorys(pCategoryId);\r\n      // 生成二级下拉列表的options\r\n      const childOptions = subCategorys.map((c) => ({\r\n        value: c._id,\r\n        label: c.name,\r\n        isLeaf: true,\r\n      }));\r\n\r\n      // 找到当前商品对应的一级option对象\r\n      const targetOption = options.find(\r\n        (option) => option.value === pCategoryId\r\n      );\r\n\r\n      // 关联对应的一级option上\r\n      targetOption.children = childOptions;\r\n    }\r\n\r\n    // 更新options状态\r\n    this.setState({\r\n      options,\r\n    });\r\n  };\r\n\r\n  /*\r\n  异步获取一级/二级分类列表, 并显示\r\n  async函数的返回值是一个新的promise对象, promise的结果和值由async的结果来决定\r\n   */\r\n  getCategorys = async (parentId) => {\r\n    const result = await reqCategorys(parentId); // {status: 0, data: categorys}\r\n    if (result.status === 0) {\r\n      const categorys = result.data;\r\n      // 如果是一级分类列表\r\n      if (parentId === \"0\") {\r\n        this.initOptions(categorys);\r\n      } else {\r\n        // 二级列表\r\n        return categorys; // 返回二级列表 ==> 当前async函数返回的promsie就会成功且value为categorys\r\n      }\r\n    }\r\n  };\r\n\r\n  /*\r\n  用加载下一级列表的回调函数\r\n   */\r\n  loadData = async (selectedOptions) => {\r\n    // 得到选择的option对象\r\n    const targetOption = selectedOptions[0];\r\n    // 显示loading\r\n    targetOption.loading = true;\r\n\r\n    // 根据选中的分类, 请求获取二级分类列表\r\n    const subCategorys = await this.getCategorys(targetOption.value);\r\n    // 隐藏loading\r\n    targetOption.loading = false;\r\n    // 二级分类数组有数据\r\n    if (subCategorys && subCategorys.length > 0) {\r\n      // 生成一个二级列表的options\r\n      const childOptions = subCategorys.map((c) => ({\r\n        value: c._id,\r\n        label: c.name,\r\n        isLeaf: true,\r\n      }));\r\n      // 关联到当前option上\r\n      targetOption.children = childOptions;\r\n    } else {\r\n      // 当前选中的分类没有二级分类\r\n      targetOption.isLeaf = true;\r\n    }\r\n\r\n    // 更新options状态\r\n    this.setState({\r\n      options: [...this.state.options],\r\n    });\r\n  };\r\n\r\n  submit = () => {\r\n    // 进行表单验证, 如果通过了, 才发送请求\r\n    this.props.form.validateFields(async (error, values) => {\r\n      if (!error) {\r\n        // 1. 收集数据, 并封装成product对象\r\n        const { name, desc, price, categoryIds } = values;\r\n        let pCategoryId, categoryId;\r\n        if (categoryIds.length === 1) {\r\n          pCategoryId = \"0\";\r\n          categoryId = categoryIds[0];\r\n        } else {\r\n          pCategoryId = categoryIds[0];\r\n          categoryId = categoryIds[1];\r\n        }\r\n        const imgs = this.pw.current.getImgs();\r\n        const detail = this.editor.current.getDetail();\r\n\r\n        const product = {\r\n          name,\r\n          desc,\r\n          price,\r\n          imgs,\r\n          detail,\r\n          pCategoryId,\r\n          categoryId,\r\n        };\r\n\r\n        // 如果是更新, 需要添加_id\r\n        if (this.isUpdate) {\r\n          product._id = this.product._id;\r\n        }\r\n\r\n        // 2. 调用接口请求函数去添加/更新\r\n        const result = await reqAddOrUpdateProduct(product);\r\n\r\n        // 3. 根据结果提示\r\n        if (result.status === 0) {\r\n          message.success(`${this.isUpdate ? \"更新\" : \"添加\"}商品成功!`);\r\n          this.props.history.goBack();\r\n        } else {\r\n          message.error(`${this.isUpdate ? \"更新\" : \"添加\"}商品失败!`);\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  validatePrice = (rule, value, callback) => {\r\n    if (value * 1 > 0) {\r\n      callback(); // 验证通过\r\n    } else {\r\n      callback(\"价格必须大于0\"); // 验证没通过\r\n    }\r\n  };\r\n\r\n  onFinish = async (values) => {\r\n    // 1. 收集数据, 并封装成product对象\r\n    const { name, desc, price, categoryIds } = values;\r\n    let pCategoryId, categoryId;\r\n    if (categoryIds.length === 1) {\r\n      pCategoryId = \"0\";\r\n      categoryId = categoryIds[0];\r\n    } else {\r\n      pCategoryId = categoryIds[0];\r\n      categoryId = categoryIds[1];\r\n    }\r\n    const imgs = this.pw.current.getImgs();\r\n    const detail = this.editor.current.getDetail();\r\n\r\n    const product = {\r\n      name,\r\n      desc,\r\n      price,\r\n      imgs,\r\n      detail,\r\n      pCategoryId,\r\n      categoryId,\r\n    };\r\n\r\n    // 如果是更新, 需要添加_id\r\n    if (this.isUpdate) {\r\n      product._id = this.product._id;\r\n    }\r\n\r\n    // 2. 调用接口请求函数去添加/更新\r\n    const result = await reqAddOrUpdateProduct(product);\r\n\r\n    // 3. 根据结果提示\r\n    if (result.status === 0) {\r\n      message.success(`${this.isUpdate ? \"更新\" : \"添加\"}商品成功!`);\r\n      this.props.history.goBack();\r\n    } else {\r\n      message.error(`${this.isUpdate ? \"更新\" : \"添加\"}商品失败!`);\r\n    }\r\n  };\r\n\r\n  onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getCategorys(\"0\");\r\n  }\r\n\r\n  componentWillMount() {\r\n    // 取出携带的state\r\n    const product = this.props.location.state; // 如果是添加没值, 否则有值\r\n    // 保存是否是更新的标识\r\n    this.isUpdate = !!product;\r\n    // 保存商品(如果没有, 保存是{})\r\n    this.product = product || {};\r\n  }\r\n\r\n  render() {\r\n    // 指定Item布局的配置对象\r\n    const { isUpdate, product } = this;\r\n    const { pCategoryId, categoryId, imgs, detail } = product;\r\n    // 用来接收级联分类ID的数组\r\n    const categoryIds = [];\r\n    if (isUpdate) {\r\n      // 商品是一个一级分类的商品\r\n      if (pCategoryId === \"0\") {\r\n        categoryIds.push(categoryId);\r\n      } else {\r\n        // 商品是一个二级分类的商品\r\n        categoryIds.push(pCategoryId);\r\n        categoryIds.push(categoryId);\r\n      }\r\n    }\r\n\r\n    // 指定Item布局的配置对象\r\n    const formItemLayout = {\r\n      labelCol: { span: 2 }, // 左侧label的宽度\r\n      wrapperCol: { span: 8 }, // 右侧包裹的宽度\r\n    };\r\n\r\n    // 头部左侧标题\r\n    const title = (\r\n      <span>\r\n        <LinkButton onClick={() => this.props.history.goBack()}>\r\n          <ArrowLeftOutlined style={{fontSize: 20}} />\r\n        </LinkButton>\r\n        <span>{isUpdate ? \"修改商品\" : \"添加商品\"}</span>\r\n      </span>\r\n    );\r\n    return (\r\n      <Card title={title}>\r\n        <Form\r\n          {...formItemLayout}\r\n          ref={this.formRef}\r\n          onFinish={this.onFinish}\r\n          onFinishFailed={this.onFinishFailed}\r\n          initialValues={product}\r\n        >\r\n          <Item\r\n            name=\"name\"\r\n            label=\"商品名称\"\r\n            rules={[{ required: true, message: \"必须输入商品名称\" }]}\r\n          >\r\n            <Input placeholder=\"请输入商品名称\" />\r\n          </Item>\r\n          <Item\r\n            name=\"desc\"\r\n            label=\"商品描述\"\r\n            rules={[{ required: true, message: \"必须输入商品描述\" }]}\r\n          >\r\n            <TextArea\r\n              placeholder=\"请输入商品描述\"\r\n              autosize={{ minRows: 2, maxRows: 6 }}\r\n            />\r\n          </Item>\r\n          <Item\r\n            name=\"price\"\r\n            label=\"商品价格\"\r\n            rules={[\r\n              { required: true, message: \"必须输入商品名称\" },\r\n              { validator: this.validatePrice },\r\n            ]}\r\n          >\r\n            <Input type=\"number\" placeholder=\"请输入商品价格\" addonAfter=\"元\" />\r\n          </Item>\r\n          <Item\r\n            name=\"categoryIds\"\r\n            label=\"商品分类\"\r\n            initialValue={categoryIds}\r\n            rules={[{ required: true, message: \"必须指定商品分类\" }]}\r\n          >\r\n            <Cascader\r\n              placeholder=\"请指定商品分类\"\r\n              options={this.state.options} /*需要显示的列表数据数组*/\r\n              loadData={\r\n                this.loadData\r\n              } /*当选择某个列表项, 加载下一级列表的监听回调*/\r\n            />\r\n          </Item>\r\n          <Item label=\"商品图片\">\r\n            <PicturesWall ref={this.pw} imgs={imgs} />\r\n          </Item>\r\n          <Item\r\n            label=\"商品详情\"\r\n            labelCol={{ span: 2 }}\r\n            wrapperCol={{ span: 20 }}\r\n          >\r\n            <RichTextEditor ref={this.editor} detail={detail} />\r\n          </Item>\r\n          <Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              提交\r\n            </Button>\r\n          </Item>\r\n        </Form>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n","import React, {Component} from 'react'\r\nimport {\r\n  Card,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  Table,\r\n  message\r\n} from 'antd'\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport LinkButton from '../../components/LinkButton'\r\nimport {reqProducts, reqSearchProducts, reqUpdateStatus} from '../../api'\r\nimport {PAGE_SIZE} from '../../utils/constants'\r\n\r\nconst Option = Select.Option\r\n\r\n/*\r\nProduct的默认子路由组件\r\n */\r\nexport default class ProductHome extends Component {\r\n\r\n  state = {\r\n    total: 0, // 商品的总数量\r\n    products: [], // 商品的数组\r\n    loading: false, // 是否正在加载中\r\n    searchName: '', // 搜索的关键字\r\n    searchType: 'productName', // 根据哪个字段搜索\r\n  }\r\n\r\n  /*\r\n  初始化table的列的数组\r\n   */\r\n  initColumns = () => {\r\n    this.columns = [\r\n      {\r\n        title: '商品名称',\r\n        dataIndex: 'name',\r\n      },\r\n      {\r\n        title: '商品描述',\r\n        dataIndex: 'desc',\r\n      },\r\n      {\r\n        title: '价格',\r\n        dataIndex: 'price',\r\n        render: (price) => '¥' + price  // 当前指定了对应的属性, 传入的是对应的属性值\r\n      },\r\n      {\r\n        width: 100,\r\n        title: '状态',\r\n        // dataIndex: 'status',\r\n        render: (product) => {\r\n          const {status, _id} = product\r\n          const newStatus = status===1 ? 2 : 1\r\n          return (\r\n            <span>\r\n              <Button\r\n                type='primary'\r\n                onClick={() => this.updateStatus(_id, newStatus)}\r\n              >\r\n                {status===1 ? '下架' : '上架'}\r\n              </Button>\r\n              <span>{status===1 ? '在售' : '已下架'}</span>\r\n            </span>\r\n          )\r\n        }\r\n      },\r\n      {\r\n        width: 100,\r\n        title: '操作',\r\n        render: (product) => {\r\n          return (\r\n            <span>\r\n              {/*将product对象使用state传递给目标路由组件*/}\r\n              <LinkButton onClick={() => this.props.history.push('/product/detail', {product})}>详情</LinkButton>\r\n              <LinkButton onClick={() => this.props.history.push('/product/addOrUpdate', product)}>修改</LinkButton>\r\n            </span>\r\n          )\r\n        }\r\n      },\r\n    ];\r\n  }\r\n\r\n  /*\r\n  获取指定页码的列表数据显示\r\n   */\r\n  getProducts = async (pageNum) => {\r\n    this.pageNum = pageNum // 保存pageNum, 让其它方法可以看到\r\n    this.setState({loading: true}) // 显示loading\r\n\r\n    const {searchName, searchType} = this.state\r\n    // 如果搜索关键字有值, 说明我们要做搜索分页\r\n    let result\r\n    if (searchName) {\r\n      result = await reqSearchProducts({pageNum, pageSize: PAGE_SIZE, searchName, searchType})\r\n    } else { // 一般分页请求\r\n      result = await reqProducts(pageNum, PAGE_SIZE)\r\n    }\r\n\r\n    this.setState({loading: false}) // 隐藏loading\r\n    if (result.status === 0) {\r\n      // 取出分页数据, 更新状态, 显示分页列表\r\n      const {total, list} = result.data\r\n      this.setState({\r\n        total,\r\n        products: list\r\n      })\r\n    }\r\n  }\r\n\r\n  /*\r\n  更新指定商品的状态\r\n   */\r\n  updateStatus = async (productId, status) => {\r\n    const result = await reqUpdateStatus(productId, status)\r\n    if(result.status===0) {\r\n      message.success('更新商品成功')\r\n      this.getProducts(this.pageNum)\r\n    }\r\n  }\r\n\r\n  componentWillMount () {\r\n    this.initColumns()\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.getProducts(1)\r\n  }\r\n\r\n  render() {\r\n\r\n    // 取出状态数据\r\n    const {products, total, loading, searchType, searchName} = this.state\r\n\r\n\r\n\r\n    const title = (\r\n      <span>\r\n        <Select\r\n          value= {searchType}\r\n          style={{width: 150}}\r\n          onChange={value => this.setState({searchType:value})}\r\n        >\r\n          <Option value='productName'>按名称搜索</Option>\r\n          <Option value='productDesc'>按描述搜索</Option>\r\n        </Select>\r\n        <Input\r\n          placeholder='关键字'\r\n          style={{width: 150, margin: '0 15px'}}\r\n          value={searchName}\r\n          onChange={event => this.setState({searchName:event.target.value})}\r\n        />\r\n        <Button type='primary' onClick={() => this.getProducts(1)}>搜索</Button>\r\n      </span>\r\n    )\r\n\r\n    const extra = (\r\n      <Button type='primary' onClick={() => this.props.history.push('/product/addOrUpdate')}>\r\n        <PlusOutlined />\r\n        添加商品\r\n      </Button>\r\n    )\r\n\r\n    return (\r\n      <Card title={title} extra={extra}>\r\n        <Table\r\n          bordered\r\n          rowKey='_id'\r\n          loading={loading}\r\n          dataSource={products}\r\n          columns={this.columns}\r\n          pagination={{\r\n            current: this.pageNum,\r\n            total,\r\n            defaultPageSize: PAGE_SIZE,\r\n            showQuickJumper: true,\r\n            onChange: this.getProducts\r\n          }}\r\n        />\r\n      </Card>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport Detail from './detail';\r\nimport AddOrUpdate from './addOrUpdate';\r\nimport List from './list';\r\n\r\nexport default class Product extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Switch>\r\n          <Route path=\"/product\" exact={ true } component={ List } />\r\n          <Route path=\"/product/addOrUpdate\" component={ AddOrUpdate } />\r\n          <Route path=\"/product/detail\" component={ Detail } />\r\n          <Redirect to=\"/product\" />\r\n        </Switch>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Form, Input } from \"antd\";\r\n\r\nconst Item = Form.Item;\r\n\r\n/*\r\n添加分类的form组件\r\n */\r\n\r\nexport default class AddForm extends Component {\r\n  static propTypes = {\r\n    setForm: PropTypes.func.isRequired, // 用来传递form对象的函数\r\n  };\r\n\r\n  addForm = React.createRef();\r\n\r\n  componentWillMount() {\r\n    this.props.setForm(this.addForm);\r\n  }\r\n\r\n  render() {\r\n    // 指定Item布局的配置对象\r\n    const formItemLayout = {\r\n      labelCol: { span: 4 }, // 左侧label的宽度\r\n      wrapperCol: { span: 15 }, // 右侧包裹的宽度\r\n    };\r\n\r\n    return (\r\n      <Form ref={this.addForm}>\r\n        <Item name=\"roleName\" label=\"角色名称\" {...formItemLayout}>\r\n          <Input placeholder=\"请输入角色名称\" />\r\n        </Item>\r\n      </Form>\r\n    );\r\n  }\r\n}","import React, { PureComponent } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Form, Input, Tree } from \"antd\";\r\nimport menuList from \"../../config/menuConfig\";\r\nconst menuListData = [{\r\n  title: '平台权限',\r\n  key: '/all',\r\n  children: menuList\r\n}];\r\n\r\nconst Item = Form.Item;\r\n\r\nconst { TreeNode } = Tree;\r\n\r\n/*\r\n添加分类的form组件\r\n */\r\nexport default class AuthForm extends PureComponent {\r\n  static propTypes = {\r\n    role: PropTypes.object,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // 根据传入角色的menus生成初始状态\r\n    const { menus } = this.props.role;\r\n    this.state = {\r\n      checkedKeys: menus,\r\n    };\r\n  }\r\n\r\n  /*\r\n  为父组件提交获取最新menus数据的方法\r\n   */\r\n  getMenus = () => this.state.checkedKeys;\r\n\r\n  getTreeNodes = (menuList) => {\r\n    return menuList.reduce((pre, item) => {\r\n      pre.push(\r\n        <TreeNode title={item.title} key={item.key}>\r\n          {item.children ? this.getTreeNodes(item.children) : null}\r\n        </TreeNode>\r\n      );\r\n      return pre;\r\n    }, []);\r\n  };\r\n\r\n  getTreeData = (menuListData) => {\r\n    // menuList = [{\r\n    //   title: '平台权限',\r\n    //   key: '/all',\r\n    //   children: menuList\r\n    // }]\r\n    return menuListData.reduce((pre, item) => {\r\n      pre.push(\r\n        {\r\n          title: item.title,\r\n          key: item.key,\r\n          children: item.children ? this.getTreeData(item.children) : null\r\n        }  \r\n      )\r\n      console.log('pre', pre);\r\n      return pre\r\n      // [{ title: '平台权限', key: '/all', children: pre }]\r\n    }, [])\r\n  }\r\n\r\n  // 选中某个node时的回调\r\n  onCheck = (checkedKeys) => {\r\n    console.log(\"onCheck\", checkedKeys);\r\n    this.setState({ checkedKeys });\r\n  };\r\n\r\n  componentWillMount() {\r\n    // this.treeNodes = this.getTreeNodes(menuList);\r\n    this.treeData = this.getTreeData(menuListData);\r\n  }\r\n\r\n  // 根据新传入的role来更新checkedKeys状态\r\n  /*\r\n  当组件接收到新的属性时自动调用\r\n   */\r\n  componentWillReceiveProps(nextProps) {\r\n    console.log(\"componentWillReceiveProps()\", nextProps);\r\n    const menus = nextProps.role.menus;\r\n    this.setState({\r\n      checkedKeys: menus,\r\n    });\r\n    // this.state.checkedKeys = menus\r\n  }\r\n\r\n  render() {\r\n    console.log(\"AuthForm render()\");\r\n    const { role } = this.props;\r\n    const { checkedKeys } = this.state;\r\n    // 指定Item布局的配置对象\r\n    const formItemLayout = {\r\n      labelCol: { span: 4 }, // 左侧label的宽度\r\n      wrapperCol: { span: 15 }, // 右侧包裹的宽度\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <Item label=\"角色名称\" {...formItemLayout}>\r\n          <Input value={role.name} disabled />\r\n        </Item>\r\n\r\n        <Tree\r\n          checkable\r\n          defaultExpandAll={true}\r\n          checkedKeys={checkedKeys}\r\n          onCheck={this.onCheck}\r\n          treeData={this.treeData}\r\n        >\r\n          {/* <TreeNode title=\"平台权限\" key=\"all\">\r\n            {this.treeNodes}\r\n          </TreeNode> */}\r\n        </Tree>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Card, Button, Table, Modal, message } from \"antd\";\r\nimport { PAGE_SIZE } from \"../../utils/constants\";\r\nimport { reqRoles, reqAddRole, reqUpdateRole } from \"../../api\";\r\nimport AddForm from \"./AddForm\";\r\nimport AuthForm from \"./AuthForm\";\r\nimport memoryUtils from \"../../utils/memoryUtils\";\r\nimport { formateDate } from \"../../utils/dateUtils\";\r\nimport storageUtils from \"../../utils/storageUtils\";\r\n\r\n/*\r\n角色路由\r\n */\r\nexport default class Role extends Component {\r\n  state = {\r\n    roles: [], // 所有角色的列表\r\n    role: {}, // 选中的role\r\n    isShowAdd: false, // 是否显示添加界面\r\n    isShowAuth: false, // 是否显示设置权限界面\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.auth = React.createRef();\r\n  }\r\n\r\n  initColumn = () => {\r\n    this.columns = [\r\n      {\r\n        title: \"角色名称\",\r\n        dataIndex: \"name\",\r\n      },\r\n      {\r\n        title: \"创建时间\",\r\n        dataIndex: \"create_time\",\r\n        render: (create_time) => formateDate(create_time),\r\n      },\r\n      {\r\n        title: \"授权时间\",\r\n        dataIndex: \"auth_time\",\r\n        render: formateDate,\r\n      },\r\n      {\r\n        title: \"授权人\",\r\n        dataIndex: \"auth_name\",\r\n      },\r\n    ];\r\n  };\r\n\r\n  getRoles = async () => {\r\n    const result = await reqRoles();\r\n    if (result.status === 0) {\r\n      const roles = result.data;\r\n      this.setState({\r\n        roles,\r\n      });\r\n    }\r\n  };\r\n\r\n  onRow = (role) => {\r\n    return {\r\n      onClick: (event) => {\r\n        // 点击行\r\n        console.log(\"row onClick()\", role);\r\n        // alert('点击行')\r\n        this.setState({\r\n          role,\r\n        });\r\n      },\r\n    };\r\n  };\r\n\r\n  /*\r\n  添加角色\r\n   */\r\n  addRole = () => {\r\n    // 进行表单验证, 只能通过了才向下处理\r\n    const { validateFields, resetFields } = this.form.current;\r\n    validateFields()\r\n      .then(async values => {\r\n        this.setState({\r\n          isShowAdd: false,\r\n        });\r\n        // 收集输入数据\r\n        const { roleName } = values;\r\n        resetFields();\r\n        // 请求添加\r\n        const result = await reqAddRole(roleName);\r\n        // 根据结果提示/更新列表显示\r\n        if (result.status === 0) {\r\n          message.success(\"添加角色成功\");\r\n          // this.getRoles()\r\n          // 新产生的角色\r\n          const role = result.data;\r\n          // 更新roles状态\r\n          /*const roles = this.state.roles\r\n          roles.push(role)\r\n          this.setState({\r\n            roles\r\n          })*/\r\n    \r\n          // 更新roles状态: 基于原本状态数据更新\r\n          this.setState((state) => ({\r\n            roles: [...state.roles, role],\r\n          }));\r\n        } else {\r\n          message.success(\"添加角色失败\");\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log('err', err);\r\n      })\r\n  };\r\n\r\n  /*\r\n  更新角色\r\n   */\r\n  updateRole = async () => {\r\n    // 隐藏确认框\r\n    this.setState({\r\n      isShowAuth: false,\r\n    });\r\n\r\n    const role = this.state.role;\r\n    // 得到最新的menus\r\n    const menus = this.auth.current.getMenus();\r\n    role.menus = menus;\r\n    role.auth_time = Date.now();\r\n    role.auth_name = memoryUtils.user.username;\r\n\r\n    // 请求更新\r\n    const result = await reqUpdateRole(role);\r\n    if (result.status === 0) {\r\n      // this.getRoles()\r\n      // 如果当前更新的是自己角色的权限, 强制退出\r\n      if (role._id === memoryUtils.user.role_id) {\r\n        memoryUtils.user = {};\r\n        storageUtils.removeUser();\r\n        this.props.history.replace(\"/login\");\r\n        message.success(\"当前用户角色权限成功\");\r\n      } else {\r\n        message.success(\"设置角色权限成功\");\r\n        this.setState({\r\n          roles: [...this.state.roles],\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  componentWillMount() {\r\n    this.initColumn();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getRoles();\r\n  }\r\n\r\n  render() {\r\n    const { roles, role, isShowAdd, isShowAuth } = this.state;\r\n\r\n    const title = (\r\n      <span>\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={() => this.setState({ isShowAdd: true })}\r\n        >\r\n          创建角色\r\n        </Button>\r\n        &nbsp;&nbsp;\r\n        <Button\r\n          type=\"primary\"\r\n          disabled={!role._id}\r\n          onClick={() => this.setState({ isShowAuth: true })}\r\n        >\r\n          设置角色权限\r\n        </Button>\r\n      </span>\r\n    );\r\n\r\n    return (\r\n      <Card title={title}>\r\n        <Table\r\n          bordered\r\n          rowKey=\"_id\"\r\n          dataSource={roles}\r\n          columns={this.columns}\r\n          pagination={{ defaultPageSize: PAGE_SIZE }}\r\n          rowSelection={{\r\n            type: \"radio\",\r\n            selectedRowKeys: [role._id],\r\n            onSelect: (role) => {\r\n              // 选择某个radio时回调\r\n              this.setState({\r\n                role,\r\n              });\r\n            },\r\n          }}\r\n          onRow={this.onRow}\r\n        />\r\n\r\n        <Modal\r\n          title=\"添加角色\"\r\n          visible={isShowAdd}\r\n          onOk={this.addRole}\r\n          onCancel={() => {\r\n            this.setState({ isShowAdd: false });\r\n            this.form.current.resetFields();\r\n          }}\r\n        >\r\n          <AddForm setForm={(form) => (this.form = form)} />\r\n        </Modal>\r\n\r\n        <Modal\r\n          title=\"设置角色权限\"\r\n          visible={isShowAuth}\r\n          onOk={this.updateRole}\r\n          onCancel={() => {\r\n            this.setState({ isShowAuth: false });\r\n          }}\r\n        >\r\n          <AuthForm ref={this.auth} role={role} />\r\n        </Modal>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Form, Select, Input } from \"antd\";\r\n\r\nconst Item = Form.Item;\r\nconst Option = Select.Option;\r\n\r\n/*\r\n添加/修改用户的form组件\r\n */\r\n\r\nexport default class UserForm extends PureComponent {\r\n  static propTypes = {\r\n    setForm: PropTypes.func.isRequired, // 用来传递form对象的函数\r\n    roles: PropTypes.array.isRequired,\r\n    user: PropTypes.object,\r\n  };\r\n\r\n  form = React.createRef()\r\n\r\n  componentWillMount() {\r\n    this.props.setForm(this.form);\r\n  }\r\n\r\n  render() {\r\n    const { roles, user } = this.props;\r\n    // 指定Item布局的配置对象\r\n    const formItemLayout = {\r\n      labelCol: { span: 4 }, // 左侧label的宽度\r\n      wrapperCol: { span: 15 }, // 右侧包裹的宽度\r\n    };\r\n\r\n    return (\r\n      <Form {...formItemLayout} ref={this.form} initialValues={user}>\r\n        <Item name='username' label=\"用户名\">\r\n          <Input placeholder=\"请输入用户名\" />\r\n        </Item>\r\n\r\n        {user._id ? null : (\r\n          <Item name='password' label=\"密码\">\r\n            <Input type=\"password\" placeholder=\"请输入密码\" />\r\n          </Item>\r\n        )}\r\n\r\n        <Item name='phone' label=\"手机号\">\r\n          <Input placeholder=\"请输入手机号\" />\r\n        </Item>\r\n\r\n        <Item name='email' label=\"邮箱\">\r\n          <Input placeholder=\"请输入邮箱\" />\r\n        </Item>\r\n\r\n        <Item name='role_id' label=\"角色\">\r\n          <Select>\r\n            {roles.map((role) => (\r\n              <Option key={role._id} value={role._id}>\r\n                {role.name}\r\n              </Option>\r\n            ))}\r\n          </Select>\r\n        </Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\n","import React, { Component } from \"react\";\r\nimport { Card, Button, Table, Modal, message } from \"antd\";\r\nimport { formateDate } from \"../../utils/dateUtils\";\r\nimport LinkButton from \"../../components/LinkButton/index\";\r\nimport { reqDeleteUser, reqUsers, reqAddOrUpdateUser } from \"../../api/index\";\r\nimport UserForm from \"./UserForm\";\r\n\r\n/*\r\n用户路由\r\n */\r\nexport default class User extends Component {\r\n  state = {\r\n    users: [], // 所有用户列表\r\n    roles: [], // 所有角色列表\r\n    isShow: false, // 是否显示确认框\r\n  };\r\n\r\n  initColumns = () => {\r\n    this.columns = [\r\n      {\r\n        title: \"用户名\",\r\n        dataIndex: \"username\",\r\n      },\r\n      {\r\n        title: \"邮箱\",\r\n        dataIndex: \"email\",\r\n      },\r\n\r\n      {\r\n        title: \"电话\",\r\n        dataIndex: \"phone\",\r\n      },\r\n      {\r\n        title: \"注册时间\",\r\n        dataIndex: \"create_time\",\r\n        render: formateDate,\r\n      },\r\n      {\r\n        title: \"所属角色\",\r\n        dataIndex: \"role_id\",\r\n        render: (role_id) => this.roleNames[role_id],\r\n      },\r\n      {\r\n        title: \"操作\",\r\n        render: (user) => (\r\n          <span>\r\n            <LinkButton onClick={() => this.showUpdate(user)}>修改</LinkButton>\r\n            <LinkButton onClick={() => this.deleteUser(user)}>删除</LinkButton>\r\n          </span>\r\n        ),\r\n      },\r\n    ];\r\n  };\r\n\r\n  /*\r\n  根据role的数组, 生成包含所有角色名的对象(属性名用角色id值)\r\n   */\r\n  initRoleNames = (roles) => {\r\n    const roleNames = roles.reduce((pre, role) => {\r\n      pre[role._id] = role.name;\r\n      return pre;\r\n    }, {});\r\n    // 保存\r\n    this.roleNames = roleNames;\r\n  };\r\n\r\n  /*\r\n  显示添加界面\r\n   */\r\n  showAdd = () => {\r\n    this.user = null; // 去除前面保存的user\r\n    this.setState({ isShow: true });\r\n  };\r\n\r\n  /*\r\n  显示修改界面\r\n   */\r\n  showUpdate = (user) => {\r\n    this.user = user; // 保存user\r\n    this.setState({\r\n      isShow: true,\r\n    });\r\n  };\r\n\r\n  /*\r\n  删除指定用户\r\n   */\r\n  deleteUser = (user) => {\r\n    Modal.confirm({\r\n      title: `确认删除${user.username}吗?`,\r\n      onOk: async () => {\r\n        const result = await reqDeleteUser(user._id);\r\n        if (result.status === 0) {\r\n          message.success(\"删除用户成功!\");\r\n          this.getUsers();\r\n        }\r\n      },\r\n    });\r\n  };\r\n\r\n  /*\r\n  添加/更新用户\r\n   */\r\n  addOrUpdateUser = async () => {\r\n    this.setState({ isShow: false });\r\n    const {getFieldsValue, resetFields} = this.form.current;\r\n    // 1. 收集输入数据\r\n    const user = getFieldsValue();\r\n    resetFields();\r\n    // 如果是更新, 需要给user指定_id属性\r\n    if (this.user) {\r\n      user._id = this.user._id;\r\n    }\r\n\r\n    // 2. 提交添加的请求\r\n    const result = await reqAddOrUpdateUser(user);\r\n    // 3. 更新列表显示\r\n    if (result.status === 0) {\r\n      message.success(`${this.user ? \"修改\" : \"添加\"}用户成功`);\r\n      this.getUsers();\r\n    }\r\n  };\r\n\r\n  getUsers = async () => {\r\n    const result = await reqUsers();\r\n    if (result.status === 0) {\r\n      const { users, roles } = result.data;\r\n      this.initRoleNames(roles);\r\n      this.setState({\r\n        users,\r\n        roles,\r\n      });\r\n    }\r\n  };\r\n\r\n  componentWillMount() {\r\n    this.initColumns();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getUsers();\r\n  }\r\n\r\n  render() {\r\n    const { users, roles, isShow } = this.state;\r\n    const user = this.user || {};\r\n\r\n    const title = (\r\n      <Button type=\"primary\" onClick={this.showAdd}>\r\n        创建用户\r\n      </Button>\r\n    );\r\n\r\n    return (\r\n      <Card title={title}>\r\n        <Table\r\n          bordered\r\n          rowKey=\"_id\"\r\n          dataSource={users}\r\n          columns={this.columns}\r\n          pagination={{ defaultPageSize: 2 }}\r\n        />\r\n\r\n        <Modal\r\n          title={user._id ? \"修改用户\" : \"添加用户\"}\r\n          visible={isShow}\r\n          onOk={this.addOrUpdateUser}\r\n          onCancel={() => {\r\n            this.form.current.resetFields();\r\n            this.setState({ isShow: false });\r\n          }}\r\n        >\r\n          <UserForm\r\n            setForm={(form) => (this.form = form)}\r\n            roles={roles}\r\n            user={user}\r\n          />\r\n        </Modal>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n","import React, {Component} from 'react'\r\nimport {Card, Button} from 'antd'\r\nimport ReactEcharts from 'echarts-for-react'\r\n\r\n/*\r\n后台管理的柱状图路由组件\r\n */\r\nexport default class Bar extends Component {\r\n\r\n  state = {\r\n    sales: [5, 20, 36, 10, 10, 20], // 销量的数组\r\n    stores: [6, 10, 25, 20, 15, 10], // 库存的数组\r\n  }\r\n\r\n  update = () => {\r\n    this.setState(state => ({\r\n      sales: state.sales.map(sale => sale + 1),\r\n      stores: state.stores.reduce((pre, store) => {\r\n        pre.push(store-1)\r\n        return pre\r\n      }, []),\r\n    }))\r\n  }\r\n\r\n  /*\r\n  返回柱状图的配置对象\r\n   */\r\n  getOption = (sales, stores) => {\r\n    return {\r\n      title: {\r\n        text: 'ECharts 入门示例'\r\n      },\r\n      tooltip: {},\r\n      legend: {\r\n        data:['销量', '库存']\r\n      },\r\n      xAxis: {\r\n        data: [\"衬衫\",\"羊毛衫\",\"雪纺衫\",\"裤子\",\"高跟鞋\",\"袜子\"]\r\n      },\r\n      yAxis: {},\r\n      series: [{\r\n        name: '销量',\r\n        type: 'bar',\r\n        data: sales\r\n      }, {\r\n        name: '库存',\r\n        type: 'bar',\r\n        data: stores\r\n      }]\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {sales, stores} = this.state\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <Button type='primary' onClick={this.update}>更新</Button>\r\n        </Card>\r\n\r\n        <Card title='柱状图一'>\r\n          <ReactEcharts option={this.getOption(sales, stores)} />\r\n        </Card>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react'\r\nimport {Card, Button} from 'antd'\r\nimport ReactEcharts from 'echarts-for-react'\r\n\r\n/*\r\n后台管理的折线图路由组件\r\n */\r\nexport default class Line extends Component {\r\n\r\n  state = {\r\n    sales: [5, 20, 36, 10, 10, 20], // 销量的数组\r\n    stores: [6, 10, 25, 20, 15, 10], // 库存的数组\r\n  }\r\n\r\n  update = () => {\r\n    this.setState(state => ({\r\n      sales: state.sales.map(sale => sale + 1),\r\n      stores: state.stores.reduce((pre, store) => {\r\n        pre.push(store-1)\r\n        return pre\r\n      }, []),\r\n    }))\r\n  }\r\n\r\n  /*\r\n  返回柱状图的配置对象\r\n   */\r\n  getOption = (sales, stores) => {\r\n    return {\r\n      title: {\r\n        text: 'ECharts 入门示例'\r\n      },\r\n      tooltip: {},\r\n      legend: {\r\n        data:['销量', '库存']\r\n      },\r\n      xAxis: {\r\n        data: [\"衬衫\",\"羊毛衫\",\"雪纺衫\",\"裤子\",\"高跟鞋\",\"袜子\"]\r\n      },\r\n      yAxis: {},\r\n      series: [{\r\n        name: '销量',\r\n        type: 'line',\r\n        data: sales\r\n      }, {\r\n        name: '库存',\r\n        type: 'line',\r\n        data: stores\r\n      }]\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {sales, stores} = this.state\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <Button type='primary' onClick={this.update}>更新</Button>\r\n        </Card>\r\n\r\n        <Card title='折线图一'>\r\n          <ReactEcharts option={this.getOption(sales, stores)} />\r\n        </Card>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react'\r\nimport {Card} from 'antd'\r\nimport ReactEcharts from 'echarts-for-react'\r\n\r\n/*\r\n后台管理的饼图路由组件\r\n */\r\nexport default class Pie extends Component {\r\n\r\n  getOption = () => {\r\n    return {\r\n      title : {\r\n        text: '某站点用户访问来源',\r\n        subtext: '纯属虚构',\r\n        x:'center'\r\n      },\r\n      tooltip : {\r\n        trigger: 'item',\r\n        formatter: \"{a} <br/>{b} : {c} ({d}%)\"\r\n      },\r\n      legend: {\r\n        orient: 'vertical',\r\n        left: 'left',\r\n        data: ['直接访问','邮件营销','联盟广告','视频广告','搜索引擎']\r\n      },\r\n      series : [\r\n        {\r\n          name: '访问来源',\r\n          type: 'pie',\r\n          radius : '55%',\r\n          center: ['50%', '60%'],\r\n          data:[\r\n            {value:335, name:'直接访问'},\r\n            {value:310, name:'邮件营销'},\r\n            {value:234, name:'联盟广告'},\r\n            {value:135, name:'视频广告'},\r\n            {value:1548, name:'搜索引擎'}\r\n          ],\r\n          itemStyle: {\r\n            emphasis: {\r\n              shadowBlur: 10,\r\n              shadowOffsetX: 0,\r\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    };\r\n\r\n  }\r\n\r\n  getOption2 = () => {\r\n    return {\r\n      backgroundColor: '#2c343c',\r\n\r\n      title: {\r\n        text: 'Customized Pie',\r\n        left: 'center',\r\n        top: 20,\r\n        textStyle: {\r\n          color: '#ccc'\r\n        }\r\n      },\r\n\r\n      tooltip : {\r\n        trigger: 'item',\r\n        formatter: \"{a} <br/>{b} : {c} ({d}%)\"\r\n      },\r\n\r\n      visualMap: {\r\n        show: false,\r\n        min: 80,\r\n        max: 600,\r\n        inRange: {\r\n          colorLightness: [0, 1]\r\n        }\r\n      },\r\n      series : [\r\n        {\r\n          name:'访问来源',\r\n          type:'pie',\r\n          radius : '55%',\r\n          center: ['50%', '50%'],\r\n          data:[\r\n            {value:335, name:'直接访问'},\r\n            {value:310, name:'邮件营销'},\r\n            {value:274, name:'联盟广告'},\r\n            {value:235, name:'视频广告'},\r\n            {value:400, name:'搜索引擎'}\r\n          ].sort(function (a, b) { return a.value - b.value; }),\r\n          roseType: 'radius',\r\n          label: {\r\n            normal: {\r\n              textStyle: {\r\n                color: 'rgba(255, 255, 255, 0.3)'\r\n              }\r\n            }\r\n          },\r\n          labelLine: {\r\n            normal: {\r\n              lineStyle: {\r\n                color: 'rgba(255, 255, 255, 0.3)'\r\n              },\r\n              smooth: 0.2,\r\n              length: 10,\r\n              length2: 20\r\n            }\r\n          },\r\n          itemStyle: {\r\n            normal: {\r\n              color: '#c23531',\r\n              shadowBlur: 200,\r\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n            }\r\n          },\r\n\r\n          animationType: 'scale',\r\n          animationEasing: 'elasticOut',\r\n          animationDelay: function (idx) {\r\n            return Math.random() * 200;\r\n          }\r\n        }\r\n      ]\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card title='饼图一'>\r\n          <ReactEcharts option={this.getOption()} style={{height: 300}}/>\r\n        </Card>\r\n        <Card title='饼图二'>\r\n          <ReactEcharts option={this.getOption2()} style={{height: 300}}/>\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class NotFound extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        NotFound\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Order extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        Order\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport memoryUtils from \"../../utils/memoryUtils\";\r\n\r\nimport LeftNav from \"../../components/LeftNav\";\r\nimport Header from \"../../components/Header\";\r\nimport Home from \"../Home\";\r\nimport Category from \"../Category\";\r\nimport Product from \"../Product\";\r\nimport Role from \"../Role\";\r\nimport User from \"../User\";\r\nimport Bar from \"../Charts/bar\";\r\nimport Line from \"../Charts/line\";\r\nimport Pie from \"../Charts/pie\";\r\nimport NotFound from \"../NotFound\";\r\nimport Order from \"../Order\";\r\n\r\nimport { Layout } from \"antd\";\r\nconst { Footer, Sider, Content } = Layout;\r\n\r\nexport default class Admin extends Component {\r\n  render() {\r\n    const user = memoryUtils.user;\r\n    if (!user || !user._id) {\r\n      return <Redirect to=\"/login\" />;\r\n    }\r\n    return (\r\n      <Layout style={{ minHeight: \"100%\" }}>\r\n        <Sider>\r\n          <LeftNav />\r\n        </Sider>\r\n        <Layout>\r\n          <Header>Header</Header>\r\n          <Content style={{ margin: 20, background: \"#fff\" }}>\r\n            <Switch>\r\n              <Redirect from=\"/\" exact to=\"/home\" />\r\n              <Route path=\"/home\" component={Home} />\r\n              <Route path=\"/category\" component={Category} />\r\n              <Route path=\"/product\" component={Product} />\r\n              <Route path=\"/user\" component={User} />\r\n              <Route path=\"/role\" component={Role} />\r\n              <Route path=\"/charts/bar\" component={Bar} />\r\n              <Route path=\"/charts/pie\" component={Pie} />\r\n              <Route path=\"/charts/line\" component={Line} />\r\n              <Route path=\"/order\" component={Order} />\r\n              <Route component={NotFound} />\r\n            </Switch>\r\n          </Content>\r\n          <Footer style={{ textAlign: \"center\", color: \"#cccccc\" }}>\r\n            Footer\r\n          </Footer>\r\n        </Layout>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Login from './pages/Login/index';\nimport Admin from './pages/Admin/index';\nexport default class App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Switch>\n          <Route path=\"/login\" component={Login}></Route>\n          <Route path=\"/\" component={Admin}></Route>\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport storageUtils from './utils/storageUtils';\nimport memoryUtils from './utils/memoryUtils';\n\n// 读取local中保存user, 保存到内存中\nconst user = storageUtils.getUser();\nmemoryUtils.user = user;\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}